/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SecurityIndexImport } from './routes/security/index'
import { Route as MailboxesIndexImport } from './routes/mailboxes/index'
import { Route as DomainsIndexImport } from './routes/domains/index'
import { Route as BillingIndexImport } from './routes/billing/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SecurityIndexRoute = SecurityIndexImport.update({
  id: '/security/',
  path: '/security/',
  getParentRoute: () => rootRoute,
} as any)

const MailboxesIndexRoute = MailboxesIndexImport.update({
  id: '/mailboxes/',
  path: '/mailboxes/',
  getParentRoute: () => rootRoute,
} as any)

const DomainsIndexRoute = DomainsIndexImport.update({
  id: '/domains/',
  path: '/domains/',
  getParentRoute: () => rootRoute,
} as any)

const BillingIndexRoute = BillingIndexImport.update({
  id: '/billing/',
  path: '/billing/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/billing/': {
      id: '/billing/'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof BillingIndexImport
      parentRoute: typeof rootRoute
    }
    '/domains/': {
      id: '/domains/'
      path: '/domains'
      fullPath: '/domains'
      preLoaderRoute: typeof DomainsIndexImport
      parentRoute: typeof rootRoute
    }
    '/mailboxes/': {
      id: '/mailboxes/'
      path: '/mailboxes'
      fullPath: '/mailboxes'
      preLoaderRoute: typeof MailboxesIndexImport
      parentRoute: typeof rootRoute
    }
    '/security/': {
      id: '/security/'
      path: '/security'
      fullPath: '/security'
      preLoaderRoute: typeof SecurityIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/billing': typeof BillingIndexRoute
  '/domains': typeof DomainsIndexRoute
  '/mailboxes': typeof MailboxesIndexRoute
  '/security': typeof SecurityIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/billing': typeof BillingIndexRoute
  '/domains': typeof DomainsIndexRoute
  '/mailboxes': typeof MailboxesIndexRoute
  '/security': typeof SecurityIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/billing/': typeof BillingIndexRoute
  '/domains/': typeof DomainsIndexRoute
  '/mailboxes/': typeof MailboxesIndexRoute
  '/security/': typeof SecurityIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/billing' | '/domains' | '/mailboxes' | '/security'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/billing' | '/domains' | '/mailboxes' | '/security'
  id:
    | '__root__'
    | '/'
    | '/billing/'
    | '/domains/'
    | '/mailboxes/'
    | '/security/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BillingIndexRoute: typeof BillingIndexRoute
  DomainsIndexRoute: typeof DomainsIndexRoute
  MailboxesIndexRoute: typeof MailboxesIndexRoute
  SecurityIndexRoute: typeof SecurityIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BillingIndexRoute: BillingIndexRoute,
  DomainsIndexRoute: DomainsIndexRoute,
  MailboxesIndexRoute: MailboxesIndexRoute,
  SecurityIndexRoute: SecurityIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/billing/",
        "/domains/",
        "/mailboxes/",
        "/security/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/billing/": {
      "filePath": "billing/index.tsx"
    },
    "/domains/": {
      "filePath": "domains/index.tsx"
    },
    "/mailboxes/": {
      "filePath": "mailboxes/index.tsx"
    },
    "/security/": {
      "filePath": "security/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
